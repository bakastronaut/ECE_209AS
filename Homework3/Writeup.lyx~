#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Bakari Hassan - Problem Set 3 - ECE 209AS
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
section*{Preliminaries}
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Github Link: https://github.com/bakastronaut/ECE_209AS_PSETS/tree/master/Homework
3
\end_layout

\begin_layout Enumerate
No collaboration involved with my submission.
 I did help Solomon/Jay.
\end_layout

\begin_layout Enumerate
I referred to a paper to write the UKF code (see references)
\end_layout

\begin_layout Enumerate
All contributions were mine
\end_layout

\begin_layout Enumerate
100 % - Bakari Hassan
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
section*{Mathematical Setup}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsection*{Model Definition}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
List of assumptions:
\end_layout

\begin_layout Itemize
No friction
\end_layout

\begin_layout Itemize
Inertial reference frames
\begin_inset Foot
status open

\begin_layout Plain Layout
I was planning to relax this assumption, but did not have time.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The problem was setup using two reference frames: 1) Body-fixed frame 2)
 Earth- (World-) fixed frame.
 The body-fixed frame is indicated by the primed vectors.
 The x'-axis is forward-facing, the y'-axis extends from the left side of
 the vehicle, and the z'-axis completes the orthogonal system.
 The Earth-fixed frame is defined with the z-axis pointing downwards as
 well.
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename ReferenceFrames.png
	lyxscale 40
	scale 40

\end_inset


\end_layout

\begin_layout Standard
Using Newton's second law for the body frame (primed variables), forces
 are only applied along the x-axis.
 The equation of motion (EOM) becomes:
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\sum F_{x}=m\ddot{x}'=F_{left}+F_{right}\Longrightarrow\ddot{x}'=\frac{1}{m_{c}}\left(m_{w}\ddot{\phi}_{L}+m_{w}\ddot{\phi}_{R}\right)$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The dynamics equations are discretely summed once (the integral analog)
 to get the body frame's velocity along x', which is then transformed to
 the world frame using a 2D rotation matrix.
 Those equations are then integrated to get x position as a function of
 the two wheel angular velocities:
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $x_{t+1}=x_{t}+r\frac{m_{w}}{m_{c}}\left(\dot{\phi_{L_{t}}}+\dot{\phi_{R_{t}}}\right)\Delta t\cdot cos\theta_{t}$
\end_inset

 (1) 
\end_layout

\begin_layout Standard
\begin_inset Formula $y_{t+1}=y_{t}+r\frac{m_{w}}{m_{c}}\left(\dot{\phi_{L_{t}}}+\dot{\phi_{R_{t}}}\right)\Delta t\cdot sin\theta_{t}$
\end_inset

 (2)
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Then, Newton's second law is applied for torques about the body z axis:
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\sumτ_{z}=I_{z}\ddot{\theta}=τ_{L}-τ_{R}$
\end_inset

 (3) 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $I_{z}$
\end_inset

 is the rotational inertia about the z-axis, which is calculated assuming
 the car is a cylinder rotating about its primary axis:
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $I_{z}=\frac{1}{12}m_{c}\left(2\delta\right)^{2}$
\end_inset

 (4)
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Before summing the torques, the center of torque must be found as a function
 of the torques produced by the individual wheels.
 This is done by setting the torques equal to each other and solving for
 the moment arm of the left motor 
\begin_inset Formula $\left(\gamma\right)$
\end_inset

 under the constraint that the sum of the moment arms is equal to the width
 of the car:
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $τ_{L}=τ_{R}\Longrightarrow\gamma F_{L}=\left(2\delta-\gamma\right)F_{R}$
\end_inset

 (5)
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
When gamma is solved for, the following expression of the location of center
 of torque relative to the left wheel is obtained:
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\gamma=2\delta\left(1-\frac{1}{\frac{F_{L}}{F_{R}}+1}\right)$
\end_inset

 (6)
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
When plotted, it verifies that the center of rotation remains within the
 body of the robot, which is valid since we will let the translation equations
 take care of the translational component when the center of mass is not
 under pure rotation:
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename CenterOfRotation.png
	lyxscale 50
	scale 50

\end_inset


\end_layout

\begin_layout Standard
When substituted into the EOM, an expression for angular acceleration about
 the z-axis follows from (3):
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\ddot{\theta}=\frac{1}{I_{z}}\left(\gamma F_{L}+\gamma F_{R}-2\delta F_{R}\right)$
\end_inset

 (7)
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
When summed twice with respect to time, the state as a function of control
 inputs is obtained:
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\theta_{t+1}=\theta_{t}+r\frac{m_{w}}{I_{z}}\left[\gamma\dot{\phi_{L_{t}}}+\left(\gamma-2\delta\right)\dot{\phi_{R_{t}}}\right]\varDelta t$
\end_inset

 (8)
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Now, consider the general expression for a dynamical system:
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $x_{t+1}=f\left(x_{t},u_{t}\right)$
\end_inset

 (9)
\end_layout

\begin_layout Standard
\begin_inset Formula $y_{t+1}=f\left(x_{t+1},u_{t}\right)$
\end_inset

 (10)
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The first expression (9) in matrix form is now:
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\left[\begin{array}{c}
x\\
y\\
\theta
\end{array}\right]_{t+1}=\left[\begin{array}{ccc}
1 & 0 & 0\\
0 & 1 & 0\\
0 & 0 & 1
\end{array}\right]\left[\begin{array}{c}
x\\
y\\
\theta
\end{array}\right]_{t}+rm_{w}\Delta t\left[\begin{array}{cc}
\frac{1}{m_{c}}cos\theta_{t} & \frac{1}{m_{c}}cos\theta_{t}\\
\frac{1}{m_{c}}cos\theta_{t} & \frac{1}{m_{c}}cos\theta_{t}\\
\gamma\frac{1}{I_{z}} & \left(\gamma-2\delta\right)\frac{1}{I_{z}}
\end{array}\right]\left[\begin{array}{c}
\dot{\phi}_{L}\\
\dot{\phi_{R}}
\end{array}\right]_{t}$
\end_inset

(11)
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The output equation (10) is piecewise nonlinear and cannot be expressed
 in matrix format.
 The function is setup as follows:
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename OutputDiagram.png
	lyxscale 35
	scale 35

\end_inset


\end_layout

\begin_layout Standard
where:
\end_layout

\begin_layout Standard
\begin_inset Formula $\begin{array}{cc}
\theta_{0}=\tan^{-1}\left(\frac{\frac{h}{2}+y}{\frac{w}{2}-x}\right) & \theta_{7}=\tan^{-1}\left(\frac{\frac{h}{2}-y}{\frac{w}{2}-x}\right)\\
\theta_{1}=\tan^{-1}\left(\frac{\frac{w}{2}-x}{\frac{h}{2}-y}\right) & \theta_{2}=\tan^{-1}\left(\frac{\frac{w}{2}+x}{\frac{h}{2}-y}\right)\\
\theta_{3}=\tan^{-1}\left(\frac{\frac{h}{2}-y}{\frac{w}{2}+x}\right) & \theta_{4}=\tan^{-1}\left(\frac{\frac{h}{2}+y}{\frac{w}{2}+x}\right)\\
\theta_{5}=\tan^{-1}\left(\frac{\frac{w}{2}+x}{\frac{h}{2}+y}\right) & \theta_{6}=\tan^{-1}\left(\frac{\frac{w}{2}-x}{\frac{h}{2}+y}\right)
\end{array}$
\end_inset

 (12)
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The point of intersection with the walls is determined by finding the intersecti
on of the line emanating from the robot's CM along the body axis unit vector
 and the equation of the wall.
 The equation of the line along the body x-axis 
\begin_inset Formula $\left(f_{x}\right)$
\end_inset

 and y-axis 
\begin_inset Formula $\left(f_{y}\right)$
\end_inset

:
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $f_{y}=x\tan\theta_{0}-x_{0}\tan\theta_{0}+y_{o}$
\end_inset

 (13)
\end_layout

\begin_layout Standard
\begin_inset Formula $f_{x}=x\tan\left(\theta_{0}-\frac{\pi}{2}\right)-x_{0}\tan\left(\theta_{0}-\frac{\pi}{2}\right)+y_{o}$
\end_inset

 (14)
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
medskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\left(x_{0},y_{0}\right)$
\end_inset

 is the robot's position.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Then, logic is used to determine which of the four angular regions the individua
l axes are in, as well as handling singularities in the tangent function:
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename PiecewiseNonlinear.png
	lyxscale 40
	scale 40

\end_inset


\end_layout

\begin_layout Standard
The distance is then found by taking the 
\begin_inset Formula $\text{ℓ}\textrm{-2}$
\end_inset

 norm of the differences between the perimeter coordinates 
\begin_inset Formula $\left(X,Y\right)$
\end_inset

 and the robot coordinates 
\begin_inset Formula $\left(x_{0},y_{0}\right)$
\end_inset

:
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
medskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\textrm{dist}=\sqrt{\left(X-x_{0}\right)^{2}+\left(Y-y_{0}\right)^{2}}$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsection*{Unscented Kalman Filter}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The unscented Kalman filter (UKF) was chosen for this project due to an
 incremental increase in complexity relative to the extended Kalman Filter
 (EKF), but its significant improvement in accuracy over the EKF.
 The difference is that instead of linearizing the dynamical system, which
 can cause large errors for large rates of change, it tracks a few points
 (called sigma vectors whose values depend on scaling parameters and the
 state covariance) by sending them through the nonlinear transformation,
 along with the noise estimates, and then calculating their mean and covariance
 using a weighted sum to get the expected mean and covariance of the state.
 The following 3 images were taken from 
\begin_inset CommandInset citation
LatexCommand cite
key "key-2"

\end_inset

:
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename KF_EKF_UKF.png
	lyxscale 45
	scale 45

\end_inset


\end_layout

\begin_layout Standard
The equations have been inserted from in the figure below.
 The first image is the general algorithm and the second is how the sigma
 vector and weights are calculated:
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename Algorithm.png
	lyxscale 50
	scale 50

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename SigmaWeights.png
	lyxscale 45
	scale 45

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
section*{Evaluation}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsection*{Demonstration}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Five trials were run to test the effectiveness of the UKF:
\end_layout

\begin_layout Enumerate
Initial state uncertainty (no environment or sensor noise)
\end_layout

\begin_layout Enumerate
Finite enviornment covariance (no initital state uncertainty or sensor noise)
\end_layout

\begin_layout Enumerate
Finite sensor covariance (no initial state uncertainty or enviornment noise)
\end_layout

\begin_layout Enumerate
Initial state uncertainty with sensor noise (no environment noise)
\end_layout

\begin_layout Enumerate
Initial state uncertainty with sensor and environment noise
\end_layout

\begin_layout Standard
The control inputs for each scenario are identical.
 The right wheel is kept at a constant rotational velocity of 5 radians
 per second with the left wheel velocity ramped from 0 to 4.75 radians per
 second.
 This creates a nice spiral-out, spiral-in trajectory.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsubsection*{Case 1: Initial State Uncertainty}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The first scenario is one in which there is uncertainty in the initial state.
 Overall, the Kalman filter did a good job estimating the state, with the
 estimation error converging over the duration from the beginning to end
 of the trajectory.
 This is apparent in the trajectory plot (top left) when comparing the initial
 offset to the final offset.
 The following covariance matrix was used:
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\sum=\begin{array}{ccc}
0.001 & 0 & 0\\
0 & 0.001 & 0\\
0 & 0 & 0.001
\end{array}m^{2}$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
It can also be seen in the absolute error plot below the trajectory plot
 with the final errors beginning above 0.01 and both ending below.
 Finally, the plot at the top right shows the offset (both positive and
 negative) through time.
 At the end, the estimated x position is almost indiscernible from the true
 x position.
 Although the heading increased, it was by a negligible amount, on the order
 of a micro radian.
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename UKF_State.png
	lyxscale 35
	scale 35

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsubsection*{Case 2: Environment Noise}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The second scenario is one in which there is environmental noise, meaning
 the robot's actions result in uncertain actions such as slipping.
 Overall, the Kalman filter performed similarly to the case with state uncertain
ty, with the estimation error converging over the duration from the beginning
 to end of the trajectory.
 This is apparent in the trajectory plot (top left) when comparing the initial
 offset to the final offset.
 The following covariance matrix was used:
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\sum=1\times10^{-5}\begin{array}{ccc}
0.0025 & 0 & 0\\
0 & 0.0025 & 0\\
0 & 0 & 0.0000
\end{array}m^{2}$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
However, different from the previous trial, the error increases from 0 to
 values similar to the previous trial.
 The initial low value is expected because there was no uncertainty in the
 initial state.
 But the fact that they ended at the same position highlights the divergence.
 Finally, the plot at the top right shows the offset (both positive and
 negative) through time.
 In this case, the y error was smaller than the x error, likely due to the
 trajectory including more y translation than x translation.
 This can affect the measurements used to gain confidence in estimations.
 In this case, the heading error essentially remained constant on the scale
 of sub-micro radian errors.
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename UKF_Environment.png
	lyxscale 35
	scale 35

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsubsection*{Case 3: Sensor Noise}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This scenario is one in which there is sensor noise.
 This case had the best performance overall.
 The true and estimated trajectories are almost identical, with all estimation
 errors less than 1 mm in magnitude outside of a brief period between 350
 and 325 seconds.
 The following covariance matrix was used:
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\sum=1\times10^{-4}\begin{array}{ccc}
0.006 & 0 & 0\\
0 & 0.006 & 0\\
0 & 0 & 1\times10^{-6}
\end{array}m^{2}$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Sensor noise did not appear to have a large effect on the state estimator's
 performance.
 Additionally, the estimated trajectory is very smooth, meaning the sensor
 noise did not affect the mapping from control inputs to physical actions.
 This makes sense because the noise term for sensors is not in the state
 update equation.
 They should only affect the confidence in the current state.
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename UKF_Sensor.png
	lyxscale 35
	scale 35

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsubsection*{Case 4: State Uncertainty with Sensor Noise}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Scenario four was run as a follow-on to scenario three to see how the unscented
 Kalman filter performed with both initial state uncertainty and sensor
 noise.
 As I expected, the sensor noise made the state uncertainty higher, resulting
 in larger absolute errors for translation state estimation.
 The same covariance matrices were used for this case that were used for
 the two cases above for the individual scenarios involving initial state
 uncertainty and sensor noise.
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename UKF_State_Sensor.png
	lyxscale 35
	scale 35

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsubsection*{Case 5: State Uncertainty with Sensor and Environment Noise}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The fifth scenario combined all noise and uncertainty sources.
 The unscented Kalman filter did very well in this situation.
 It outperformed all cases other than the third case that only contained
 sensor noise.
 This was unexpected, as the combined case was expected to be the worst-performi
ng case.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename UKF_State_Environment_Sensor.png
	lyxscale 35
	scale 35

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsection*{Conclusion}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Overall, the UKF did a really good job on the state estimation.
 It managed to keep all estimation errors below 0.02 meters (20 mm) for a
 maximum y position offset of 200 mm, which is 10 percent of the traveled
 distance.
 This would be suitable as long as no precision position knowledge is needed
 for an appliaction.
 
\end_layout

\begin_layout Standard
One way to improve this filter could be to use machine learning to learn
 the noise characteristics of the sensors.
 If learned well, the filter could predict the noise for each time step
 more effectively than a pure statistical approach based on mean and covariance.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-2"

\end_inset

E.
 A.
 Wan, R.
 Van der Merwe, "The unscented Kalman filter for nonlinear estimation",
 Proc.
 Symp.
 Adaptive Syst.
 Signal Process.
 Commun.
 Contr., Oct.
 2000.
\end_layout

\end_body
\end_document
